#+property: header-args:sh  :tangle ./etl.sh

manually tangle to =etl.sh= file with =C-c C-v t=  (=org-babel-tangle=)

#+begin_src sh
#!/bin/bash

# shell script configs
set -eu

echo "=life_tables= preparation scripts for br-ibge-censo-2010\n"
#+end_src


#+begin_src sh
# url where 2010th edition of brazilian life tables are located
lt_url=ftp://ftp.ibge.gov.br/Tabuas_Abreviadas_de_Mortalidade/2010/tabelas_xls.zip

# source and directories where raw and processed data are to be stored
src_dir=/tmp/etl/br_ibge_censo_2010
raw_data=${src_dir}/raw
proc_data=${src_dir}/data
#+end_src


#+begin_src sh
create_temporary_directories(){

    echo "Creating temporary directory for raw data at $raw_data..."
    rm -rf ${raw_data}
    mkdir -p ${raw_data}

    echo "DONE.\nCreating temporary directory for processed data at $proc_data..."
    rm -rf ${proc_data}
    mkdir -p ${proc_data}

    echo "DONE."
}
#+end_src


#+begin_src sh
fetch_life_tables(){

    echo "Fetching the =life-tables= from $lt_url..."
    R --quiet --vanilla -e "curl::curl_download( '${lt_url}', '${raw_data}/lt.zip' )"

    echo '  DONE. Unziping the =life-tables=...'
    unzip ${raw_data}/lt.zip -d ${raw_data}

    echo '  DONE. Deleting the downloaded =microdata= zip file...'
    rm -rf ${raw_data}/lt.zip
    echo 'DONE.'

}
#+end_src


#+begin_src R :tangle ./gnur_parse_life_tables.R
## ./gnur_parse_life_tables.R
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
library(readr)

## TODO
## directories
tmp_dir <- '/tmp/etl/br_ibge_censo_2010/'
raw_dir <- paste0(tmp_dir, 'raw/')
proc_dir <- paste0(tmp_dir, 'data/')

## Abbreviated Life Table from 2010th edition of the Brazilian Population Census
lt2010w <- bind_rows(
    ## Both sexes
    read_excel(
        path = paste0(raw_dir, 'tabela_1_1.xls'),
        sheet = 'BR',
        range = 'A6:K25',
        col_names = FALSE ) %>% mutate( sex = 'both', year = '2010' ),
    ## Male
    read_excel(
        path = paste0(raw_dir, 'tabela_1_1.xls'),
        sheet = 'BR',
        range = 'A27:K46',
        col_names = FALSE ) %>% mutate( sex = 'male', year = '2010' ),
    ## Female
    read_excel(
        path = paste0(raw_dir, 'tabela_1_1.xls'),
        sheet = 'BR',
        range = 'A48:K67',
        col_names = FALSE ) %>% mutate( sex = 'female', year = '2010' ),
)


## Data cleaning and transformation to long format for database ingestion
lt2010 <- lt2010w %>%
    rename(
        age_grp = 1, population = 2, deaths = 3, Mxn = 4, x = 5,
        Qxn = 6, lx = 7, Dxn = 8, Lxn = 9, Tx = 10, Ex = 11
    ) %>%
    mutate(
        age_grp = case_when(
            age_grp == 'Menos de 1 ano' ~ '<1',
            age_grp == '1 a 4 anos' ~ '1-4',
            age_grp == '5 a 9 anos' ~ '5-9',
            age_grp == '90 anos e mais' ~ '90+',
            TRUE ~ paste0( 
                          str_sub( age_grp, 1,2),
                          '-',
                          as.numeric( str_sub( age_grp, 1,2)) + 4
                          )
        )
    ) %>%
    pivot_longer(
        cols = -c(age_grp, sex, year),
        names_to = 'name',
        values_to = 'value'
    )

## Write to disk (csv file for database ingestion)
lt2010 %>% 
    write_delim(
        file = paste0(proc_dir, 'censo2010_lifetables.csv'),
        delim = '|',
        col_names = TRUE
    )
#+end_src


#+begin_src sh
parse_life_tables_using_GNU_R(){

    echo 'Parsing the life tables using GNU R'
    R CMD BATCH --quiet --vanilla ./gnur_parse_life_tables.R
    rm *.Rout

    echo 'DONE.'
}
#+end_src


#+begin_src sh
remove_temporary_steps(){

    echo "Removing the temporary intermediate files"
    rm -rf ${raw_data}
    echo "DONE."
}
#+end_src



#+begin_src sh
main(){

    create_temporary_directories

    fetch_life_tables

    parse_life_tables_using_GNU_R

    remove_temporary_steps

}

main

exit 0
#+end_src


# Local Variables:
# eval: (add-hook 'after-save-hook (lambda () (org-babel-tangle) ))
# End:
